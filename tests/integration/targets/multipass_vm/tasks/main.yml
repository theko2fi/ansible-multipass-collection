---
- name: Ensure multipass VM named zazilapus doesn't exist
  theko2fi.multipass.multipass_vm:
    name: "zazilapus"
    state: absent
    purge: true

- name: Create a multipass VM
  theko2fi.multipass.multipass_vm:
    name: "zazilapus"
    state: present
    cpus: 2
    memory: '2G'
    disk: 8G
  register: create_vm

- name: Get the created VM specs
  theko2fi.multipass.multipass_config_get:
    key: "local.zazilapus.{{item}}"
  register: create_vm_config
  with_items:
    - memory
    - disk

- name: Verify that VM has been created
  ansible.builtin.assert:
    that:
      - create_vm.changed
      - create_vm.result.info.zazilapus.state == "Running"
      - create_vm.result.info.zazilapus.cpu_count == "2"
      - create_vm_config.results[0].result == "2.0GiB"
      - create_vm_config.results[1].result == "8.0GiB"

- name: Stop multipass VM
  theko2fi.multipass.multipass_vm:
    name: "zazilapus"
    state: stopped
  register: stop_vm

- name: Verify that VM has been stopped
  ansible.builtin.assert:
    that:
      - stop_vm.changed

- name: Start a multipass VM which was stopped
  theko2fi.multipass.multipass_vm:
    name: "zazilapus"
    state: started
  register: start_vm

- name: Verify that VM has been started
  ansible.builtin.assert:
    that:
      - start_vm.changed
      - start_vm.result.info.zazilapus.state == "Running"

- name: Recreate the multipass VM
  theko2fi.multipass.multipass_vm:
    name: "zazilapus"
    state: present
    recreate: true
  register: recreate_vm
  
- name: Get the recreated VM specs
  theko2fi.multipass.multipass_config_get:
    key: "local.zazilapus.{{item}}"
  register: recreate_vm_config
  with_items:
    - memory
    - disk

- name: Verify that VM has been recreated with default values
  ansible.builtin.assert:
    that:
      - recreate_vm.changed
      - recreate_vm.result.info.zazilapus.state == "Running"
      - recreate_vm.result.info.zazilapus.cpu_count == "1"
      - recreate_vm_config.results[0].result == "1.0GiB"
      - recreate_vm_config.results[1].result == "5.0GiB"

- name: Delete the multipass VM
  theko2fi.multipass.multipass_vm:
    name: "zazilapus"
    state: absent
  register: delete_vm

- name: Verify that VM has been deleted
  ansible.builtin.assert:
    that:
      - delete_vm.changed

- name: Try to stop a deleted multipass VM to check idempotency
  theko2fi.multipass.multipass_vm:
    name: "zazilapus"
    state: stopped
  register: stop_vm

- name: Verify that VM stop is idempotent
  ansible.builtin.assert:
    that:
      - stop_vm.changed == False

- name: Start a deleted VM
  theko2fi.multipass.multipass_vm:
    name: "zazilapus"
    state: started
  register: started_vm

- name: Verify that VM has been started
  ansible.builtin.assert:
    that:
      - started_vm.changed
      - started_vm.result.info.zazilapus.state == "Running"

- name: Delete and purge a VM
  theko2fi.multipass.multipass_vm:
    name: "zazilapus"
    state: absent
    purge: true
  register: purge_vm

- name: Verify that VM has been purged
  ansible.builtin.assert:
    that:
      - purge_vm.changed

- name: Delete and purge a VM (check idempotency)
  theko2fi.multipass.multipass_vm:
    name: "zazilapus"
    state: absent
    purge: true
  register: repurge_vm

- name: Verify that VM purge is idempotent 
  ansible.builtin.assert:
    that:
      - repurge_vm.changed == False